/**
 * A package for calculating the logarithm.
 */
package Logarithm
import Wurstunit

/**
 * The eulerian number e.
 */
public constant real E = 2.7182817

constant real invLog2e = 0.6931472
constant real invLog210 = 0.3010300

/**
 * Calculates the logarithm to base 2.
 * This is the binary logarithm or logarithm dualis.
 *
 * real x - the argument of the logarithm
 *
 * returns the result of log2(x)
 */
public function log2(real a) returns real
	real x = a
	real sign = 1
	real res = 0.0
	real p = 0.5
	
	if x <= 0.0
		return 0.0

	if x < 1
		x = 1.0 / x
		sign = -1.0
		
	while x >= 2
		res += 1
		x *= 0.5
	
	for int i = 1 to 23
		x *= x
		if x >= 2.
			x *= 0.5
			res += p
		p *= 0.5
	
	return sign * res

/**
 * This is just a wrapper for log2(x).
 *
 * real a - the argument of the logarithm
 *
 * returns the result of lb(a)
 */
public function lb(real a) returns real
	return log2(a)

/**
 * This is just a wrapper for log2(a).
 *
 * real a - the argument of the logarithm
 *
 * returns the result of ld(a)
 */
public function ld(real a) returns real
	return log2(a)

/**
 * Calculates the logarithm to base 10.
 *
 * real x - the argument of the logarithm
 *
 * returns the result of lg(a)
 */
public function lg(real a) returns real
	return log2(a) * invLog210

/**
 * Calculates the logarithm to base e.
 * This is the natural logarithm.
 *
 * real a - the argument of the logarithm
 *
 * returns the result of ln(a)
 */
public function ln(real a) returns real
	return log2(a) * invLog2e

/**
 * Calculates the logarithm to an arbitrary base.
 *
 * real a - the argument of the logarithm
 *
 * returns the result of log_b(a)
 */
public function log(real a, real b) returns real
	if (b <= 0.0) or (b == 1.0)
		return 0.0
	return log2(a) / log2(b)