package LogarithmTest
import NoWurst
import Logarithm
import Wurstunit
import Real

public function real.assertEquals(real other, real delta)
	if (this - other > delta) or (other - this > delta)
		testFail("expected " + other.toString() + " but was " + this.toString() + " with delta " + delta.toString())

function generalTest()
	real delta = 0.00001
	real r
	
	E.assertEquals(2.718281828452, delta)
	
	r = log(-5, 2)
	r.assertEquals(0.0, delta)
	
	r = log2(0.0)
	r.assertEquals(0.0, delta)
	
	r = log(123, 0)
	r.assertEquals(0.0, delta)
	
	r = log(123, 1)
	r.assertEquals(0.0, delta)
	
	r = log(1, 2)
	r.assertEquals(0.0, delta)
	
@test function log2Test()
	real delta = 0.00001
	real r
	
	r = log2(2.0)
	r.assertEquals(1.0, delta)
	
	r = log2(64.0)
	r.assertEquals(6.0, delta)
	
	r = log2(1.2345)
	r.assertEquals(0.303926836480, delta)
	
	r = log2(10000.0)
	r.assertEquals(13.28771237955, delta)
	
@test function lgTest()
	real delta = 0.00001
	real r
	
	r = lg(10.0)
	r.assertEquals(1.0)
	
	r = lg(10000.0)
	r.assertEquals(4.0, delta)
	
	r = lg(1.2345)
	r.assertEquals(0.091491094267, delta)
	
@test function lnTest()
	real delta = 0.00001
	real r
		
	r = ln(E)
	r.assertEquals(1.0, delta)
	
	r = ln(148.413159)
	r.assertEquals(5.0, delta)
	
@test function logTest()
	real delta = 0.00001
	real r
		
	r = log(4.0, 4.0)
	r.assertEquals(1.0, delta)
	
	r = log(10000.0, 2.0)
	r.assertEquals(13.28771237955, delta)
	